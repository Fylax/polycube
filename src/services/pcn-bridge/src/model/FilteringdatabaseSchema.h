/**
* bridge API
* bridge API generated from bridge.yang
*
* OpenAPI spec version: 1.0.0
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
*/

/* Do not edit this file manually */

/*
 * FilteringdatabaseSchema.h
 *
 *
 */

#pragma once

#include "ModelBase.h"

namespace io {
namespace swagger {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class FilteringdatabaseSchema : public ModelBase {
 public:
  FilteringdatabaseSchema();
  virtual ~FilteringdatabaseSchema();

  /////////////////////////////////////////////
  /// ModelBase overrides

  void validate() override;

  nlohmann::json toJson() const override;
  void fromJson(nlohmann::json &json) override;

  static nlohmann::json getKeys();
  static nlohmann::json getElements();
  static nlohmann::json getWritableLeafs();
  static nlohmann::json getComplexElements();
  /////////////////////////////////////////////
  /// FilteringdatabaseSchema members

  /// <summary>
  /// Age of the current filtering database entry
  /// </summary>
  int32_t getAge() const;
  void setAge(int32_t value);
  bool ageIsSet() const;
  void unsetAge();

  /// <summary>
  /// VLAN identifier
  /// </summary>
  int32_t getVlan() const;
  void setVlan(int32_t value);
  bool vlanIsSet() const;
  void unsetVlan();

  /// <summary>
  /// Output port name
  /// </summary>
  std::string getPort() const;
  void setPort(std::string value);
  bool portIsSet() const;
  void unsetPort();

  /// <summary>
  /// Address of the filtering database entry
  /// </summary>
  std::string getAddress() const;
  void setAddress(std::string value);
  bool addressIsSet() const;
  void unsetAddress();

  /// <summary>
  /// Type of filtering entry
  /// </summary>
  std::string getEntrytype() const;
  void setEntrytype(std::string value);
  bool entrytypeIsSet() const;
  void unsetEntrytype();

 protected:
  int32_t m_Age;
  bool m_AgeIsSet;
  int32_t m_Vlan;
  bool m_VlanIsSet;
  std::string m_Port;
  bool m_PortIsSet;
  std::string m_Address;
  bool m_AddressIsSet;
  std::string m_Entrytype;
  bool m_EntrytypeIsSet;
};
}
}
}
}
