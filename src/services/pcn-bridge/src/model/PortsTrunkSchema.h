/**
* bridge API
* bridge API generated from bridge.yang
*
* OpenAPI spec version: 1.0.0
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
*/

/* Do not edit this file manually */

/*
 * PortsTrunkSchema.h
 *
 *
 */

#pragma once

#include "ModelBase.h"

#include <vector>
#include "PortsTrunkAllowedSchema.h"

namespace io {
namespace swagger {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class PortsTrunkSchema : public ModelBase {
 public:
  PortsTrunkSchema();
  virtual ~PortsTrunkSchema();

  /////////////////////////////////////////////
  /// ModelBase overrides

  void validate() override;

  nlohmann::json toJson() const override;
  void fromJson(nlohmann::json &json) override;

  static nlohmann::json getKeys();
  static nlohmann::json getElements();
  static nlohmann::json getWritableLeafs();
  static nlohmann::json getComplexElements();
  /////////////////////////////////////////////
  /// PortsTrunkSchema members

  /// <summary>
  /// VLAN that is not tagged in this trunk port
  /// </summary>
  int32_t getNativevlan() const;
  void setNativevlan(int32_t value);
  bool nativevlanIsSet() const;
  void unsetNativevlan();

  /// <summary>
  /// Allowed vlans
  /// </summary>
  std::vector<PortsTrunkAllowedSchema> &getAllowed();
  bool allowedIsSet() const;
  void unsetAllowed();

 protected:
  int32_t m_Nativevlan;
  bool m_NativevlanIsSet;
  std::vector<PortsTrunkAllowedSchema> m_Allowed;
  bool m_AllowedIsSet;
};
}
}
}
}
